//     This code was generated by a Reinforced.Typings tool. 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

export interface DnsLookupRequest
{
	host: string;
	type: DnsLookupType;
	workers?: ReadonlyArray<string>;
}
export interface IpData
{
	asn?: number;
	asnName?: string;
	city?: string;
	country?: string;
	countryIso?: string;
	hostName?: string;
}
export interface PingRequest
{
	host: string;
	protocol: Protocol;
	workers?: ReadonlyArray<string>;
}
export interface WorkerResponse<T>
{
	response: T;
	workerId: string;
}
export interface Config
{
	defaultWorker: string;
	workers: WorkerConfig[];
}
export interface WorkerConfig
{
	country: string;
	id: string;
	location: string;
	name: string;
}
export interface IPingReply
{
	bytes: number;
	rtt: number;
	seq: number;
	ttl: number;
}
export interface IPingTimeout
{
	seq: number;
}
export interface IPingSummary
{
	received: number;
	sent: number;
}
export interface IHostLookupResult
{
	ip: string;
}
export interface ITracerouteReply
{
	ip: string;
	rtt: number;
	seq: number;
}
export interface IDnsLookupReferral
{
	nextServerIps: string[];
	nextServerName: string;
	prevServerIp: string;
	prevServerName: string;
	reply: any;
}
export interface IDnsARecord
{
	address: string;
}
export interface IDnsAAAARecord
{
	address: string;
}
export interface IDnsCAARecord
{
	value: string;
}
export interface IDnsCNAMERecord
{
	cname: string;
}
export interface IDnsMXRecord
{
	exchange: string;
	preference: number;
}
export interface IDnsNSRecord
{
	nsdname: string;
}
export interface IDnsPTRRecord
{
	ptrdname: string;
}
export interface IDnsSOARecord
{
	expire: number;
	minimum: number;
	mname: string;
	refresh: number;
	retry: number;
	rname: string;
	serial: number;
}
export interface IDnsTXTRecord
{
	text: string;
}
export enum PingResponseType { 
	None = 0, 
	Reply = 1, 
	Timeout = 2, 
	Summary = 3, 
	Error = 4, 
	Lookup = 5
}
export enum TracerouteResponseType { 
	None = 0, 
	Reply = 1, 
	Timeout = 2, 
	Error = 3, 
	Completed = 4, 
	Lookup = 5
}
export enum DnsLookupResponseType { 
	None = 0, 
	Reply = 2, 
	Error = 3, 
	Referral = 4
}
export enum DnsRecordType { 
	None = 0, 
	A = 3, 
	Aaaa = 4, 
	Caa = 5, 
	Cname = 6, 
	Mx = 7, 
	Ns = 8, 
	Ptr = 9, 
	Soa = 10, 
	Txt = 11
}
export interface IError
{
	message: string;
	title: string;
}
export enum Protocol { 
	Any = 0, 
	Ipv4 = 1, 
	Ipv6 = 2
}
export enum DnsLookupType { 
	A = 0, 
	Aaaa = 1, 
	Cname = 2, 
	Mx = 3, 
	Ns = 4, 
	Ptr = 5, 
	Soa = 6, 
	Txt = 7, 
	Caa = 8
}
